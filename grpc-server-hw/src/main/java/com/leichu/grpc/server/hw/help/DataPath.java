// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: huawei-telemetry.proto

package com.leichu.grpc.server.hw.help;

/**
 * Protobuf type {@code DataPath}
 */
public  final class DataPath extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:DataPath)
    DataPathOrBuilder {
  // Use DataPath.newBuilder() to construct.
  private DataPath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DataPath() {
    timestamp_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private DataPath(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            timestamp_ = input.readUInt64();
            break;
          }
          case 18: {
            com.leichu.grpc.server.hw.help.Path.Builder subBuilder = null;
            if (path_ != null) {
              subBuilder = path_.toBuilder();
            }
            path_ = input.readMessage(com.leichu.grpc.server.hw.help.Path.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(path_);
              path_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_DataPath_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_DataPath_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.leichu.grpc.server.hw.help.DataPath.class, com.leichu.grpc.server.hw.help.DataPath.Builder.class);
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 1;
  private long timestamp_;
  /**
   * <pre>
   * 采样当前实例的时间戳。
   * </pre>
   *
   * <code>optional uint64 timestamp = 1;</code>
   */
  public long getTimestamp() {
    return timestamp_;
  }

  public static final int PATH_FIELD_NUMBER = 2;
  private com.leichu.grpc.server.hw.help.Path path_;
  /**
   * <pre>
   * 数据树节点，仅包含数据的路径和key字段信息。
   * </pre>
   *
   * <code>optional .Path path = 2;</code>
   */
  public boolean hasPath() {
    return path_ != null;
  }
  /**
   * <pre>
   * 数据树节点，仅包含数据的路径和key字段信息。
   * </pre>
   *
   * <code>optional .Path path = 2;</code>
   */
  public com.leichu.grpc.server.hw.help.Path getPath() {
    return path_ == null ? com.leichu.grpc.server.hw.help.Path.getDefaultInstance() : path_;
  }
  /**
   * <pre>
   * 数据树节点，仅包含数据的路径和key字段信息。
   * </pre>
   *
   * <code>optional .Path path = 2;</code>
   */
  public com.leichu.grpc.server.hw.help.PathOrBuilder getPathOrBuilder() {
    return getPath();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (timestamp_ != 0L) {
      output.writeUInt64(1, timestamp_);
    }
    if (path_ != null) {
      output.writeMessage(2, getPath());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (timestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, timestamp_);
    }
    if (path_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPath());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.leichu.grpc.server.hw.help.DataPath)) {
      return super.equals(obj);
    }
    com.leichu.grpc.server.hw.help.DataPath other = (com.leichu.grpc.server.hw.help.DataPath) obj;

    boolean result = true;
    result = result && (getTimestamp()
        == other.getTimestamp());
    result = result && (hasPath() == other.hasPath());
    if (hasPath()) {
      result = result && getPath()
          .equals(other.getPath());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    if (hasPath()) {
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leichu.grpc.server.hw.help.DataPath parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.leichu.grpc.server.hw.help.DataPath prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code DataPath}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:DataPath)
      com.leichu.grpc.server.hw.help.DataPathOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_DataPath_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_DataPath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.leichu.grpc.server.hw.help.DataPath.class, com.leichu.grpc.server.hw.help.DataPath.Builder.class);
    }

    // Construct using com.leichu.grpc.server.hw.help.DataPath.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      timestamp_ = 0L;

      if (pathBuilder_ == null) {
        path_ = null;
      } else {
        path_ = null;
        pathBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_DataPath_descriptor;
    }

    public com.leichu.grpc.server.hw.help.DataPath getDefaultInstanceForType() {
      return com.leichu.grpc.server.hw.help.DataPath.getDefaultInstance();
    }

    public com.leichu.grpc.server.hw.help.DataPath build() {
      com.leichu.grpc.server.hw.help.DataPath result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.leichu.grpc.server.hw.help.DataPath buildPartial() {
      com.leichu.grpc.server.hw.help.DataPath result = new com.leichu.grpc.server.hw.help.DataPath(this);
      result.timestamp_ = timestamp_;
      if (pathBuilder_ == null) {
        result.path_ = path_;
      } else {
        result.path_ = pathBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.leichu.grpc.server.hw.help.DataPath) {
        return mergeFrom((com.leichu.grpc.server.hw.help.DataPath)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.leichu.grpc.server.hw.help.DataPath other) {
      if (other == com.leichu.grpc.server.hw.help.DataPath.getDefaultInstance()) return this;
      if (other.getTimestamp() != 0L) {
        setTimestamp(other.getTimestamp());
      }
      if (other.hasPath()) {
        mergePath(other.getPath());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.leichu.grpc.server.hw.help.DataPath parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.leichu.grpc.server.hw.help.DataPath) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long timestamp_ ;
    /**
     * <pre>
     * 采样当前实例的时间戳。
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <pre>
     * 采样当前实例的时间戳。
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    public Builder setTimestamp(long value) {
      
      timestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 采样当前实例的时间戳。
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    public Builder clearTimestamp() {
      
      timestamp_ = 0L;
      onChanged();
      return this;
    }

    private com.leichu.grpc.server.hw.help.Path path_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leichu.grpc.server.hw.help.Path, com.leichu.grpc.server.hw.help.Path.Builder, com.leichu.grpc.server.hw.help.PathOrBuilder> pathBuilder_;
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public boolean hasPath() {
      return pathBuilder_ != null || path_ != null;
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public com.leichu.grpc.server.hw.help.Path getPath() {
      if (pathBuilder_ == null) {
        return path_ == null ? com.leichu.grpc.server.hw.help.Path.getDefaultInstance() : path_;
      } else {
        return pathBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public Builder setPath(com.leichu.grpc.server.hw.help.Path value) {
      if (pathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        path_ = value;
        onChanged();
      } else {
        pathBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public Builder setPath(
        com.leichu.grpc.server.hw.help.Path.Builder builderForValue) {
      if (pathBuilder_ == null) {
        path_ = builderForValue.build();
        onChanged();
      } else {
        pathBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public Builder mergePath(com.leichu.grpc.server.hw.help.Path value) {
      if (pathBuilder_ == null) {
        if (path_ != null) {
          path_ =
            com.leichu.grpc.server.hw.help.Path.newBuilder(path_).mergeFrom(value).buildPartial();
        } else {
          path_ = value;
        }
        onChanged();
      } else {
        pathBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public Builder clearPath() {
      if (pathBuilder_ == null) {
        path_ = null;
        onChanged();
      } else {
        path_ = null;
        pathBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public com.leichu.grpc.server.hw.help.Path.Builder getPathBuilder() {
      
      onChanged();
      return getPathFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    public com.leichu.grpc.server.hw.help.PathOrBuilder getPathOrBuilder() {
      if (pathBuilder_ != null) {
        return pathBuilder_.getMessageOrBuilder();
      } else {
        return path_ == null ?
            com.leichu.grpc.server.hw.help.Path.getDefaultInstance() : path_;
      }
    }
    /**
     * <pre>
     * 数据树节点，仅包含数据的路径和key字段信息。
     * </pre>
     *
     * <code>optional .Path path = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leichu.grpc.server.hw.help.Path, com.leichu.grpc.server.hw.help.Path.Builder, com.leichu.grpc.server.hw.help.PathOrBuilder> 
        getPathFieldBuilder() {
      if (pathBuilder_ == null) {
        pathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.leichu.grpc.server.hw.help.Path, com.leichu.grpc.server.hw.help.Path.Builder, com.leichu.grpc.server.hw.help.PathOrBuilder>(
                getPath(),
                getParentForChildren(),
                isClean());
        path_ = null;
      }
      return pathBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:DataPath)
  }

  // @@protoc_insertion_point(class_scope:DataPath)
  private static final com.leichu.grpc.server.hw.help.DataPath DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.leichu.grpc.server.hw.help.DataPath();
  }

  public static com.leichu.grpc.server.hw.help.DataPath getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DataPath>
      PARSER = new com.google.protobuf.AbstractParser<DataPath>() {
    public DataPath parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataPath(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DataPath> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DataPath> getParserForType() {
    return PARSER;
  }

  public com.leichu.grpc.server.hw.help.DataPath getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

