// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: huawei-telemetry.proto

package com.leichu.grpc.server.hw.help;

/**
 * Protobuf type {@code TelemetrySelfDefinedEvent}
 */
public  final class TelemetrySelfDefinedEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:TelemetrySelfDefinedEvent)
    TelemetrySelfDefinedEventOrBuilder {
  // Use TelemetrySelfDefinedEvent.newBuilder() to construct.
  private TelemetrySelfDefinedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TelemetrySelfDefinedEvent() {
    path_ = "";
    protoPath_ = "";
    level_ = 0;
    description_ = "";
    fieldName_ = "";
    fieldValue_ = 0;
    thresholdRelation_ = 0;
    content_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private TelemetrySelfDefinedEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            path_ = s;
            break;
          }
          case 16: {

            level_ = input.readUInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            description_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            fieldName_ = s;
            break;
          }
          case 40: {

            fieldValue_ = input.readUInt32();
            break;
          }
          case 50: {
            com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.Builder subBuilder = null;
            if (dataThreshold_ != null) {
              subBuilder = dataThreshold_.toBuilder();
            }
            dataThreshold_ = input.readMessage(com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dataThreshold_);
              dataThreshold_ = subBuilder.buildPartial();
            }

            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            thresholdRelation_ = rawValue;
            break;
          }
          case 66: {

            content_ = input.readBytes();
            break;
          }
          case 106: {
            java.lang.String s = input.readStringRequireUtf8();

            protoPath_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_TelemetrySelfDefinedEvent_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_TelemetrySelfDefinedEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.class, com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.Builder.class);
  }

  /**
   * Protobuf enum {@code TelemetrySelfDefinedEvent.ThresholdRelation}
   */
  public enum ThresholdRelation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未配置多个阈值条件间关系。
     * </pre>
     *
     * <code>ThresholdRelation_INVALID = 0;</code>
     */
    ThresholdRelation_INVALID(0),
    /**
     * <pre>
     *阈值间关系为与。
     * </pre>
     *
     * <code>ThresholdRelation_AND = 1;</code>
     */
    ThresholdRelation_AND(1),
    /**
     * <pre>
     *阈值间关系为或。
     * </pre>
     *
     * <code>ThresholdRelation_OR = 2;</code>
     */
    ThresholdRelation_OR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *未配置多个阈值条件间关系。
     * </pre>
     *
     * <code>ThresholdRelation_INVALID = 0;</code>
     */
    public static final int ThresholdRelation_INVALID_VALUE = 0;
    /**
     * <pre>
     *阈值间关系为与。
     * </pre>
     *
     * <code>ThresholdRelation_AND = 1;</code>
     */
    public static final int ThresholdRelation_AND_VALUE = 1;
    /**
     * <pre>
     *阈值间关系为或。
     * </pre>
     *
     * <code>ThresholdRelation_OR = 2;</code>
     */
    public static final int ThresholdRelation_OR_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ThresholdRelation valueOf(int value) {
      return forNumber(value);
    }

    public static ThresholdRelation forNumber(int value) {
      switch (value) {
        case 0: return ThresholdRelation_INVALID;
        case 1: return ThresholdRelation_AND;
        case 2: return ThresholdRelation_OR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ThresholdRelation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ThresholdRelation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThresholdRelation>() {
            public ThresholdRelation findValueByNumber(int number) {
              return ThresholdRelation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.getDescriptor().getEnumTypes().get(0);
    }

    private static final ThresholdRelation[] VALUES = values();

    public static ThresholdRelation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ThresholdRelation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TelemetrySelfDefinedEvent.ThresholdRelation)
  }

  public static final int PATH_FIELD_NUMBER = 1;
  private volatile java.lang.Object path_;
  /**
   * <pre>
   *触发自定义事件的采样路径，描述content的解析方法。
   * </pre>
   *
   * <code>optional string path = 1;</code>
   */
  public java.lang.String getPath() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      path_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *触发自定义事件的采样路径，描述content的解析方法。
   * </pre>
   *
   * <code>optional string path = 1;</code>
   */
  public com.google.protobuf.ByteString
      getPathBytes() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      path_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROTO_PATH_FIELD_NUMBER = 13;
  private volatile java.lang.Object protoPath_;
  /**
   * <pre>
   *采样路径path对应在proto文件中的message路径。
   * </pre>
   *
   * <code>optional string proto_path = 13;</code>
   */
  public java.lang.String getProtoPath() {
    java.lang.Object ref = protoPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      protoPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *采样路径path对应在proto文件中的message路径。
   * </pre>
   *
   * <code>optional string proto_path = 13;</code>
   */
  public com.google.protobuf.ByteString
      getProtoPathBytes() {
    java.lang.Object ref = protoPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      protoPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LEVEL_FIELD_NUMBER = 2;
  private int level_;
  /**
   * <pre>
   *自定义事件的级别。
   * </pre>
   *
   * <code>optional uint32 level = 2;</code>
   */
  public int getLevel() {
    return level_;
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 3;
  private volatile java.lang.Object description_;
  /**
   * <pre>
   *自定义事件的描述信息。
   * </pre>
   *
   * <code>optional string description = 3;</code>
   */
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *自定义事件的描述信息。
   * </pre>
   *
   * <code>optional string description = 3;</code>
   */
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FIELDNAME_FIELD_NUMBER = 4;
  private volatile java.lang.Object fieldName_;
  /**
   * <pre>
   *触发自定义事件的字段名称。
   * </pre>
   *
   * <code>optional string fieldName = 4;</code>
   */
  public java.lang.String getFieldName() {
    java.lang.Object ref = fieldName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fieldName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *触发自定义事件的字段名称。
   * </pre>
   *
   * <code>optional string fieldName = 4;</code>
   */
  public com.google.protobuf.ByteString
      getFieldNameBytes() {
    java.lang.Object ref = fieldName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fieldName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FIELDVALUE_FIELD_NUMBER = 5;
  private int fieldValue_;
  /**
   * <pre>
   *触发自定义事件时该字段的取值。
   * </pre>
   *
   * <code>optional uint32 fieldValue = 5;</code>
   */
  public int getFieldValue() {
    return fieldValue_;
  }

  public static final int DATA_THRESHOLD_FIELD_NUMBER = 6;
  private com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable dataThreshold_;
  /**
   * <pre>
   *触发自定义事件时阈值过滤条件。
   * </pre>
   *
   * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
   */
  public boolean hasDataThreshold() {
    return dataThreshold_ != null;
  }
  /**
   * <pre>
   *触发自定义事件时阈值过滤条件。
   * </pre>
   *
   * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
   */
  public com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable getDataThreshold() {
    return dataThreshold_ == null ? com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.getDefaultInstance() : dataThreshold_;
  }
  /**
   * <pre>
   *触发自定义事件时阈值过滤条件。
   * </pre>
   *
   * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
   */
  public com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTableOrBuilder getDataThresholdOrBuilder() {
    return getDataThreshold();
  }

  public static final int THRESHOLDRELATION_FIELD_NUMBER = 7;
  private int thresholdRelation_;
  /**
   * <pre>
   *触发自定义事件时多个阈值过滤条件间关系。
   * </pre>
   *
   * <code>optional .TelemetrySelfDefinedEvent.ThresholdRelation thresholdRelation = 7;</code>
   */
  public int getThresholdRelationValue() {
    return thresholdRelation_;
  }
  /**
   * <pre>
   *触发自定义事件时多个阈值过滤条件间关系。
   * </pre>
   *
   * <code>optional .TelemetrySelfDefinedEvent.ThresholdRelation thresholdRelation = 7;</code>
   */
  public com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation getThresholdRelation() {
    com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation result = com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation.valueOf(thresholdRelation_);
    return result == null ? com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation.UNRECOGNIZED : result;
  }

  public static final int CONTENT_FIELD_NUMBER = 8;
  private com.google.protobuf.ByteString content_;
  /**
   * <pre>
   *触发自定义事件的采样数据内容。
   * </pre>
   *
   * <code>optional bytes content = 8;</code>
   */
  public com.google.protobuf.ByteString getContent() {
    return content_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
    }
    if (level_ != 0) {
      output.writeUInt32(2, level_);
    }
    if (!getDescriptionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
    }
    if (!getFieldNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, fieldName_);
    }
    if (fieldValue_ != 0) {
      output.writeUInt32(5, fieldValue_);
    }
    if (dataThreshold_ != null) {
      output.writeMessage(6, getDataThreshold());
    }
    if (thresholdRelation_ != com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation.ThresholdRelation_INVALID.getNumber()) {
      output.writeEnum(7, thresholdRelation_);
    }
    if (!content_.isEmpty()) {
      output.writeBytes(8, content_);
    }
    if (!getProtoPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, protoPath_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
    }
    if (level_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, level_);
    }
    if (!getDescriptionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
    }
    if (!getFieldNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, fieldName_);
    }
    if (fieldValue_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, fieldValue_);
    }
    if (dataThreshold_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getDataThreshold());
    }
    if (thresholdRelation_ != com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation.ThresholdRelation_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, thresholdRelation_);
    }
    if (!content_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(8, content_);
    }
    if (!getProtoPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, protoPath_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent)) {
      return super.equals(obj);
    }
    com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent other = (com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent) obj;

    boolean result = true;
    result = result && getPath()
        .equals(other.getPath());
    result = result && getProtoPath()
        .equals(other.getProtoPath());
    result = result && (getLevel()
        == other.getLevel());
    result = result && getDescription()
        .equals(other.getDescription());
    result = result && getFieldName()
        .equals(other.getFieldName());
    result = result && (getFieldValue()
        == other.getFieldValue());
    result = result && (hasDataThreshold() == other.hasDataThreshold());
    if (hasDataThreshold()) {
      result = result && getDataThreshold()
          .equals(other.getDataThreshold());
    }
    result = result && thresholdRelation_ == other.thresholdRelation_;
    result = result && getContent()
        .equals(other.getContent());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + PATH_FIELD_NUMBER;
    hash = (53 * hash) + getPath().hashCode();
    hash = (37 * hash) + PROTO_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getProtoPath().hashCode();
    hash = (37 * hash) + LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getLevel();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
    hash = (53 * hash) + getFieldName().hashCode();
    hash = (37 * hash) + FIELDVALUE_FIELD_NUMBER;
    hash = (53 * hash) + getFieldValue();
    if (hasDataThreshold()) {
      hash = (37 * hash) + DATA_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getDataThreshold().hashCode();
    }
    hash = (37 * hash) + THRESHOLDRELATION_FIELD_NUMBER;
    hash = (53 * hash) + thresholdRelation_;
    hash = (37 * hash) + CONTENT_FIELD_NUMBER;
    hash = (53 * hash) + getContent().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code TelemetrySelfDefinedEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:TelemetrySelfDefinedEvent)
      com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_TelemetrySelfDefinedEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_TelemetrySelfDefinedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.class, com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.Builder.class);
    }

    // Construct using com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      path_ = "";

      protoPath_ = "";

      level_ = 0;

      description_ = "";

      fieldName_ = "";

      fieldValue_ = 0;

      if (dataThresholdBuilder_ == null) {
        dataThreshold_ = null;
      } else {
        dataThreshold_ = null;
        dataThresholdBuilder_ = null;
      }
      thresholdRelation_ = 0;

      content_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.leichu.grpc.server.hw.help.HuaweiTelemetry.internal_static_TelemetrySelfDefinedEvent_descriptor;
    }

    public com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent getDefaultInstanceForType() {
      return com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.getDefaultInstance();
    }

    public com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent build() {
      com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent buildPartial() {
      com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent result = new com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent(this);
      result.path_ = path_;
      result.protoPath_ = protoPath_;
      result.level_ = level_;
      result.description_ = description_;
      result.fieldName_ = fieldName_;
      result.fieldValue_ = fieldValue_;
      if (dataThresholdBuilder_ == null) {
        result.dataThreshold_ = dataThreshold_;
      } else {
        result.dataThreshold_ = dataThresholdBuilder_.build();
      }
      result.thresholdRelation_ = thresholdRelation_;
      result.content_ = content_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent) {
        return mergeFrom((com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent other) {
      if (other == com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.getDefaultInstance()) return this;
      if (!other.getPath().isEmpty()) {
        path_ = other.path_;
        onChanged();
      }
      if (!other.getProtoPath().isEmpty()) {
        protoPath_ = other.protoPath_;
        onChanged();
      }
      if (other.getLevel() != 0) {
        setLevel(other.getLevel());
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        onChanged();
      }
      if (!other.getFieldName().isEmpty()) {
        fieldName_ = other.fieldName_;
        onChanged();
      }
      if (other.getFieldValue() != 0) {
        setFieldValue(other.getFieldValue());
      }
      if (other.hasDataThreshold()) {
        mergeDataThreshold(other.getDataThreshold());
      }
      if (other.thresholdRelation_ != 0) {
        setThresholdRelationValue(other.getThresholdRelationValue());
      }
      if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
        setContent(other.getContent());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object path_ = "";
    /**
     * <pre>
     *触发自定义事件的采样路径，描述content的解析方法。
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *触发自定义事件的采样路径，描述content的解析方法。
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *触发自定义事件的采样路径，描述content的解析方法。
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public Builder setPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      path_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件的采样路径，描述content的解析方法。
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public Builder clearPath() {
      
      path_ = getDefaultInstance().getPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件的采样路径，描述content的解析方法。
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      path_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object protoPath_ = "";
    /**
     * <pre>
     *采样路径path对应在proto文件中的message路径。
     * </pre>
     *
     * <code>optional string proto_path = 13;</code>
     */
    public java.lang.String getProtoPath() {
      java.lang.Object ref = protoPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        protoPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *采样路径path对应在proto文件中的message路径。
     * </pre>
     *
     * <code>optional string proto_path = 13;</code>
     */
    public com.google.protobuf.ByteString
        getProtoPathBytes() {
      java.lang.Object ref = protoPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protoPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *采样路径path对应在proto文件中的message路径。
     * </pre>
     *
     * <code>optional string proto_path = 13;</code>
     */
    public Builder setProtoPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      protoPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *采样路径path对应在proto文件中的message路径。
     * </pre>
     *
     * <code>optional string proto_path = 13;</code>
     */
    public Builder clearProtoPath() {
      
      protoPath_ = getDefaultInstance().getProtoPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *采样路径path对应在proto文件中的message路径。
     * </pre>
     *
     * <code>optional string proto_path = 13;</code>
     */
    public Builder setProtoPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      protoPath_ = value;
      onChanged();
      return this;
    }

    private int level_ ;
    /**
     * <pre>
     *自定义事件的级别。
     * </pre>
     *
     * <code>optional uint32 level = 2;</code>
     */
    public int getLevel() {
      return level_;
    }
    /**
     * <pre>
     *自定义事件的级别。
     * </pre>
     *
     * <code>optional uint32 level = 2;</code>
     */
    public Builder setLevel(int value) {
      
      level_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *自定义事件的级别。
     * </pre>
     *
     * <code>optional uint32 level = 2;</code>
     */
    public Builder clearLevel() {
      
      level_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     *自定义事件的描述信息。
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *自定义事件的描述信息。
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *自定义事件的描述信息。
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      description_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *自定义事件的描述信息。
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    public Builder clearDescription() {
      
      description_ = getDefaultInstance().getDescription();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *自定义事件的描述信息。
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      description_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fieldName_ = "";
    /**
     * <pre>
     *触发自定义事件的字段名称。
     * </pre>
     *
     * <code>optional string fieldName = 4;</code>
     */
    public java.lang.String getFieldName() {
      java.lang.Object ref = fieldName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fieldName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *触发自定义事件的字段名称。
     * </pre>
     *
     * <code>optional string fieldName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getFieldNameBytes() {
      java.lang.Object ref = fieldName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fieldName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *触发自定义事件的字段名称。
     * </pre>
     *
     * <code>optional string fieldName = 4;</code>
     */
    public Builder setFieldName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fieldName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件的字段名称。
     * </pre>
     *
     * <code>optional string fieldName = 4;</code>
     */
    public Builder clearFieldName() {
      
      fieldName_ = getDefaultInstance().getFieldName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件的字段名称。
     * </pre>
     *
     * <code>optional string fieldName = 4;</code>
     */
    public Builder setFieldNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fieldName_ = value;
      onChanged();
      return this;
    }

    private int fieldValue_ ;
    /**
     * <pre>
     *触发自定义事件时该字段的取值。
     * </pre>
     *
     * <code>optional uint32 fieldValue = 5;</code>
     */
    public int getFieldValue() {
      return fieldValue_;
    }
    /**
     * <pre>
     *触发自定义事件时该字段的取值。
     * </pre>
     *
     * <code>optional uint32 fieldValue = 5;</code>
     */
    public Builder setFieldValue(int value) {
      
      fieldValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件时该字段的取值。
     * </pre>
     *
     * <code>optional uint32 fieldValue = 5;</code>
     */
    public Builder clearFieldValue() {
      
      fieldValue_ = 0;
      onChanged();
      return this;
    }

    private com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable dataThreshold_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable, com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.Builder, com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTableOrBuilder> dataThresholdBuilder_;
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public boolean hasDataThreshold() {
      return dataThresholdBuilder_ != null || dataThreshold_ != null;
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable getDataThreshold() {
      if (dataThresholdBuilder_ == null) {
        return dataThreshold_ == null ? com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.getDefaultInstance() : dataThreshold_;
      } else {
        return dataThresholdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public Builder setDataThreshold(com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable value) {
      if (dataThresholdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataThreshold_ = value;
        onChanged();
      } else {
        dataThresholdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public Builder setDataThreshold(
        com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.Builder builderForValue) {
      if (dataThresholdBuilder_ == null) {
        dataThreshold_ = builderForValue.build();
        onChanged();
      } else {
        dataThresholdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public Builder mergeDataThreshold(com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable value) {
      if (dataThresholdBuilder_ == null) {
        if (dataThreshold_ != null) {
          dataThreshold_ =
            com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.newBuilder(dataThreshold_).mergeFrom(value).buildPartial();
        } else {
          dataThreshold_ = value;
        }
        onChanged();
      } else {
        dataThresholdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public Builder clearDataThreshold() {
      if (dataThresholdBuilder_ == null) {
        dataThreshold_ = null;
        onChanged();
      } else {
        dataThreshold_ = null;
        dataThresholdBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.Builder getDataThresholdBuilder() {
      
      onChanged();
      return getDataThresholdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    public com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTableOrBuilder getDataThresholdOrBuilder() {
      if (dataThresholdBuilder_ != null) {
        return dataThresholdBuilder_.getMessageOrBuilder();
      } else {
        return dataThreshold_ == null ?
            com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.getDefaultInstance() : dataThreshold_;
      }
    }
    /**
     * <pre>
     *触发自定义事件时阈值过滤条件。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefineThresTable data_threshold = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable, com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.Builder, com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTableOrBuilder> 
        getDataThresholdFieldBuilder() {
      if (dataThresholdBuilder_ == null) {
        dataThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable, com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTable.Builder, com.leichu.grpc.server.hw.help.TelemetrySelfDefineThresTableOrBuilder>(
                getDataThreshold(),
                getParentForChildren(),
                isClean());
        dataThreshold_ = null;
      }
      return dataThresholdBuilder_;
    }

    private int thresholdRelation_ = 0;
    /**
     * <pre>
     *触发自定义事件时多个阈值过滤条件间关系。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefinedEvent.ThresholdRelation thresholdRelation = 7;</code>
     */
    public int getThresholdRelationValue() {
      return thresholdRelation_;
    }
    /**
     * <pre>
     *触发自定义事件时多个阈值过滤条件间关系。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefinedEvent.ThresholdRelation thresholdRelation = 7;</code>
     */
    public Builder setThresholdRelationValue(int value) {
      thresholdRelation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件时多个阈值过滤条件间关系。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefinedEvent.ThresholdRelation thresholdRelation = 7;</code>
     */
    public com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation getThresholdRelation() {
      com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation result = com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation.valueOf(thresholdRelation_);
      return result == null ? com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *触发自定义事件时多个阈值过滤条件间关系。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefinedEvent.ThresholdRelation thresholdRelation = 7;</code>
     */
    public Builder setThresholdRelation(com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent.ThresholdRelation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      thresholdRelation_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件时多个阈值过滤条件间关系。
     * </pre>
     *
     * <code>optional .TelemetrySelfDefinedEvent.ThresholdRelation thresholdRelation = 7;</code>
     */
    public Builder clearThresholdRelation() {
      
      thresholdRelation_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     *触发自定义事件的采样数据内容。
     * </pre>
     *
     * <code>optional bytes content = 8;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }
    /**
     * <pre>
     *触发自定义事件的采样数据内容。
     * </pre>
     *
     * <code>optional bytes content = 8;</code>
     */
    public Builder setContent(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      content_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *触发自定义事件的采样数据内容。
     * </pre>
     *
     * <code>optional bytes content = 8;</code>
     */
    public Builder clearContent() {
      
      content_ = getDefaultInstance().getContent();
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:TelemetrySelfDefinedEvent)
  }

  // @@protoc_insertion_point(class_scope:TelemetrySelfDefinedEvent)
  private static final com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent();
  }

  public static com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TelemetrySelfDefinedEvent>
      PARSER = new com.google.protobuf.AbstractParser<TelemetrySelfDefinedEvent>() {
    public TelemetrySelfDefinedEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new TelemetrySelfDefinedEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TelemetrySelfDefinedEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TelemetrySelfDefinedEvent> getParserForType() {
    return PARSER;
  }

  public com.leichu.grpc.server.hw.help.TelemetrySelfDefinedEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

